# Generated by Django 3.0.6 on 2024-02-08 16:52

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartados',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField()),
                ('valor', models.FloatField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Calificaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cal_autoevaluacion', models.FloatField()),
                ('cal_jefe', models.FloatField()),
                ('cal_administrador', models.FloatField()),
                ('cal_supervisor', models.FloatField()),
                ('cal_director', models.FloatField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Empleados',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_emp', models.IntegerField(unique=True)),
                ('nombre', models.TextField()),
                ('apellido_paterno', models.TextField()),
                ('apellido_materno', models.TextField()),
                ('correo', models.TextField()),
                ('password', models.TextField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Evaluaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentarios_autoevaluado', models.TextField()),
                ('comentarios_jefe', models.TextField()),
                ('comentarios_director', models.TextField()),
                ('comentarios_supervisor', models.TextField()),
                ('comentarios_administrador', models.TextField()),
                ('estatus', models.SmallIntegerField()),
                ('fechaActivacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('calificacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Calificaciones')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Empleados', to_field='no_emp')),
            ],
        ),
        migrations.CreateModel(
            name='Fechas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.SmallIntegerField()),
                ('anio', models.SmallIntegerField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Objetivos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objetivo', models.TextField()),
                ('metrica', models.TextField()),
                ('valor', models.FloatField()),
                ('estatus', models.SmallIntegerField()),
                ('apartado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Apartados')),
            ],
        ),
        migrations.CreateModel(
            name='Puestos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField()),
                ('departamento', models.TextField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Rangos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField()),
                ('estatus', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Seguimientos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestado_evaludado1', models.BooleanField()),
                ('contestado_evaludado2', models.BooleanField()),
                ('contestado_evaludado3', models.BooleanField()),
                ('contestado_evaludado4', models.BooleanField()),
                ('estatus', models.SmallIntegerField()),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seguimientos_empleado', to='evaluaciones.Empleados', to_field='no_emp')),
                ('fecha', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Fechas')),
                ('id_evaluador1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seguimientos_evaluador1', to='evaluaciones.Empleados', to_field='no_emp')),
                ('id_evaluador2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seguimientos_evaluador2', to='evaluaciones.Empleados', to_field='no_emp')),
                ('id_evaluador3', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seguimientos_evaluador3', to='evaluaciones.Empleados', to_field='no_emp')),
                ('id_evaluador4', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seguimientos_evaluador4', to='evaluaciones.Empleados', to_field='no_emp')),
            ],
        ),
        migrations.CreateModel(
            name='ObjetivosMensuales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cal_autoevaluacion', models.FloatField()),
                ('cal_jefe', models.FloatField()),
                ('cal_director', models.FloatField()),
                ('cal_administrador', models.FloatField()),
                ('cal_supervisor', models.FloatField()),
                ('estatus', models.SmallIntegerField()),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Empleados', to_field='no_emp')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Evaluaciones')),
                ('fecha', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Fechas')),
                ('objetivo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Objetivos')),
            ],
        ),
        migrations.AddField(
            model_name='evaluaciones',
            name='fecha',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Fechas'),
        ),
        migrations.AddField(
            model_name='evaluaciones',
            name='seguimiento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Seguimientos'),
        ),
        migrations.AddField(
            model_name='empleados',
            name='puesto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Puestos'),
        ),
        migrations.AddField(
            model_name='empleados',
            name='rango',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Rangos'),
        ),
        migrations.CreateModel(
            name='ComentariosIndividuales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField()),
                ('estatus', models.SmallIntegerField()),
                ('ObjetivoMensual', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.ObjetivosMensuales')),
                ('empleadoComentario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Empleados', to_field='no_emp')),
                ('fecha', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Fechas')),
            ],
        ),
        migrations.AddField(
            model_name='calificaciones',
            name='empleado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Empleados', to_field='no_emp'),
        ),
        migrations.AddField(
            model_name='calificaciones',
            name='fecha',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='evaluaciones.Fechas'),
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
